// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String
  phoneNo String
  userRole String @default("user")
  emailVerified Boolean @default(false)
  walletBalance Float @default(0)
  totalFunds Float @default(0)
  totalSpent Float @default(0)
  referrerId Int?
  referrer User? @relation("ReferrerToUser", fields: [referrerId], references: [id])
  referredUsers User[] @relation("ReferrerToUser")
  joinedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DataPlan {
  id         Int      @id @default(autoincrement())
  data_id    Int
  network    String
  plan_type  String
  amount     Int
  size       String
  validity   String
  data_provider   DataProvider @relation(fields: [dataProviderId], references: [id])
  dataProviderId Int
}

model DataProvider {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  dataPlans DataPlan[]
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }
